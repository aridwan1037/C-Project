internal class Program
{
    private static void Main(string[] args)
    {
        DataStore<int>._capasity = 5;
        Console.WriteLine("Hello, World!");
    }

    class DataStore<T>{
        public static int _capasity;
        public T[] _data = new T[_capasity];
    }
    
PROGRAM BERHASILL ADD, GET, CAPASITY SEBELUM PAKAI CONSTRUCTOR

using System.Collections;
internal class Program
{
    private static void Main(string[] args)
    {
        DataStore._capasity = 5;
        DataStore mylist = new DataStore();
        DataStore my2ndlist = new DataStore();
        mylist.AddData("jammys");
        mylist.AddData(2);
        my2ndlist.AddData("Mikey");
        my2ndlist.AddData("Jhony");
        my2ndlist.AddData("Brody");
        my2ndlist.AddData("Jhony");
        my2ndlist.AddData("Brody");
        my2ndlist.AddData("Jhony");
        my2ndlist.AddData("Brody");
        my2ndlist.AddData(true);
        Console.WriteLine("data yang kamu panggil");
        mylist.GetData(); //
        Console.WriteLine("2nd data yang kamu panggil");
        my2ndlist.GetData(); //
    }

    class DataStore{
        public static int _capasity;
        public ArrayList _data = new ArrayList(_capasity);
        public void AddData <T> (T data){
            if(_data.Count < _capasity)
            _data.Add(data);
            else
            Console.WriteLine("You cannot add more than " + _capasity);
        }
        public void GetData(){
            foreach(var item in _data) 
            Console.WriteLine(item); 
        }
    }
}
    
